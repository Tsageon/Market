{"ast":null,"code":"var _getUserFromLocalStor;\nimport { createSlice } from '@reduxjs/toolkit';\nconst getCartFromLocalStorage = userId => {\n  const savedCart = localStorage.getItem(`Cart_${userId}`);\n  return savedCart ? JSON.parse(savedCart) : [];\n};\nconst getUserFromLocalStorage = () => {\n  const savedUser = localStorage.getItem('userId');\n  return savedUser ? JSON.parse(savedUser) : null;\n};\nconst saveCartToLocalStorage = (cart, userId) => {\n  localStorage.setItem(`Cart_${userId}`, JSON.stringify(cart));\n};\nconst saveUserToLocalStorage = user => {\n  localStorage.setItem('userId', JSON.stringify(user));\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    cart: [],\n    userId: ((_getUserFromLocalStor = getUserFromLocalStorage()) === null || _getUserFromLocalStor === void 0 ? void 0 : _getUserFromLocalStor.id) || null,\n    isAuthenticated: !!getUserFromLocalStorage()\n  },\n  reducers: {\n    setUser: (state, action) => {\n      const user = action.payload;\n      state.userId = user.id;\n      state.isAuthenticated = true;\n      state.cart = getCartFromLocalStorage(user.id);\n      saveUserToLocalStorage(user);\n    },\n    addToCart: (state, action) => {\n      const {\n        id,\n        Name,\n        Description,\n        Price,\n        Quantity,\n        Image\n      } = action.payload;\n      const existingItem = state.cart.find(item => item.id === id);\n      if (existingItem) {\n        existingItem.Quantity += Quantity;\n      } else {\n        state.cart.push({\n          id,\n          Name,\n          Description,\n          Price,\n          Quantity: Quantity || 1,\n          Image\n        });\n      }\n      if (state.userId) {\n        saveCartToLocalStorage(state.cart, state.userId);\n      }\n    },\n    removeFromCart: (state, action) => {\n      const updatedCart = state.cart.filter(item => item.id !== action.payload);\n      state.cart = updatedCart;\n      if (state.userId) {\n        saveCartToLocalStorage(updatedCart, state.userId);\n      }\n    },\n    clearCart: state => {\n      state.cart = [];\n      if (state.userId) {\n        saveCartToLocalStorage([], state.userId);\n      }\n    },\n    logout: state => {\n      state.userId = null;\n      state.isAuthenticated = false;\n      state.cart = [];\n      localStorage.removeItem('userId');\n      localStorage.removeItem(`Cart_${state.userId}`);\n    }\n  }\n});\nexport const {\n  setUser,\n  addToCart,\n  removeFromCart,\n  clearCart,\n  logout\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","getCartFromLocalStorage","userId","savedCart","localStorage","getItem","JSON","parse","getUserFromLocalStorage","savedUser","saveCartToLocalStorage","cart","setItem","stringify","saveUserToLocalStorage","user","cartSlice","name","initialState","_getUserFromLocalStor","id","isAuthenticated","reducers","setUser","state","action","payload","addToCart","Name","Description","Price","Quantity","Image","existingItem","find","item","push","removeFromCart","updatedCart","filter","clearCart","logout","removeItem","actions","reducer"],"sources":["C:/Users/Administrator/Desktop/marrket/src/Redux/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst getCartFromLocalStorage = (userId) => {\r\n  const savedCart = localStorage.getItem(`Cart_${userId}`);\r\n  return savedCart ? JSON.parse(savedCart) : [];\r\n};\r\n\r\nconst getUserFromLocalStorage = () => {\r\n  const savedUser = localStorage.getItem('userId');\r\n  return savedUser ? JSON.parse(savedUser) : null;\r\n};\r\n\r\nconst saveCartToLocalStorage = (cart, userId) => {\r\n  localStorage.setItem(`Cart_${userId}`, JSON.stringify(cart));\r\n};\r\n\r\nconst saveUserToLocalStorage = (user) => {\r\n  localStorage.setItem('userId', JSON.stringify(user));\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: {\r\n    cart: [],\r\n    userId: getUserFromLocalStorage()?.id || null, \r\n    isAuthenticated: !!getUserFromLocalStorage(),\r\n  },\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      const user = action.payload;\r\n      state.userId = user.id;\r\n      state.isAuthenticated = true;\r\n      state.cart = getCartFromLocalStorage(user.id);\r\n      saveUserToLocalStorage(user); \r\n    },\r\n    addToCart: (state, action) => {\r\n      const { id, Name, Description, Price, Quantity, Image } = action.payload;\r\n      const existingItem = state.cart.find(item => item.id === id);\r\n      if (existingItem) {\r\n        existingItem.Quantity += Quantity;\r\n      } else {\r\n        state.cart.push({\r\n          id,\r\n          Name,\r\n          Description,\r\n          Price,\r\n          Quantity: Quantity || 1, \r\n          Image,\r\n        });\r\n      }\r\n      if (state.userId) {\r\n        saveCartToLocalStorage(state.cart, state.userId); \r\n      }\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      const updatedCart = state.cart.filter(item => item.id !== action.payload);\r\n      state.cart = updatedCart;\r\n      if (state.userId) {\r\n        saveCartToLocalStorage(updatedCart, state.userId); \r\n      }\r\n    },\r\n    clearCart: (state) => {\r\n      state.cart = [];\r\n      if (state.userId) {\r\n        saveCartToLocalStorage([], state.userId); \r\n      }\r\n    },\r\n    logout: (state) => {\r\n      state.userId = null;\r\n      state.isAuthenticated = false;\r\n      state.cart = [];\r\n      localStorage.removeItem('userId'); \r\n      localStorage.removeItem(`Cart_${state.userId}`); \r\n    }\r\n  },\r\n});\r\n\r\nexport const { setUser, addToCart, removeFromCart, clearCart, logout } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const cartSlice=createSlice({name:'cart',initialState:[],reducers:{addToCart:(state,action)=>{const existingItem=state.find(item=>item.id===action.payload.id);if(existingItem){existingItem.quantity+=action.payload.quantity;}else{state.push({...action.payload,quantity:action.payload.quantity});}}}});export const{addToCart}=cartSlice.actions;export default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","reducers","addToCart","state","action","existingItem","find","item","id","payload","quantity","push","actions","reducer"],"sources":["C:/Users/Administrator/Desktop/marrket/src/Redux/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: [],\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      const existingItem = state.find(item => item.id === action.payload.id);\r\n      if (existingItem) {\r\n        existingItem.quantity += action.payload.quantity;\r\n      } else {\r\n        state.push({ ...action.payload, quantity: action.payload.quantity });\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart } = cartSlice.actions;\r\nexport default cartSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,SAAS,CAAGD,WAAW,CAAC,CAC5BE,IAAI,CAAE,MAAM,CACZC,YAAY,CAAE,EAAE,CAChBC,QAAQ,CAAE,CACRC,SAAS,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAC5B,KAAM,CAAAC,YAAY,CAAGF,KAAK,CAACG,IAAI,CAACC,IAAI,EAAIA,IAAI,CAACC,EAAE,GAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC,CACtE,GAAIH,YAAY,CAAE,CAChBA,YAAY,CAACK,QAAQ,EAAIN,MAAM,CAACK,OAAO,CAACC,QAAQ,CAClD,CAAC,IAAM,CACLP,KAAK,CAACQ,IAAI,CAAC,CAAE,GAAGP,MAAM,CAACK,OAAO,CAAEC,QAAQ,CAAEN,MAAM,CAACK,OAAO,CAACC,QAAS,CAAC,CAAC,CACtE,CACF,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAER,SAAU,CAAC,CAAGJ,SAAS,CAACc,OAAO,CAC9C,cAAe,CAAAd,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
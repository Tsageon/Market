{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate, useLocation } from 'react-router-dom';\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const user = useSelector(state => state.user.user);\n  const navigate = useNavigate();\n  const location = useLocation();\n  if (!user) {\n    navigate('/login', {\n      state: {\n        from: location\n      }\n    });\n    return null;\n  }\n  return children;\n};\n_s(ProtectedRoute, \"gq5VD0EAJCgRPB+ij9nTlHTLKvo=\", false, function () {\n  return [useSelector, useNavigate, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useSelector","useNavigate","useLocation","ProtectedRoute","children","_s","user","state","navigate","location","from","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/marrket/src/Components/ProtectedRoutes.js"],"sourcesContent":["\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const user = useSelector(state => state.user.user);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  if (!user) {\r\n    navigate('/login', { state: { from: location } });\r\n    return null;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAE3D,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAMC,IAAI,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,IAAI,CAACA,IAAI,CAAC;EAClD,MAAME,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,IAAI,CAACI,IAAI,EAAE;IACTE,QAAQ,CAAC,QAAQ,EAAE;MAAED,KAAK,EAAE;QAAEG,IAAI,EAAED;MAAS;IAAE,CAAC,CAAC;IACjD,OAAO,IAAI;EACb;EAEA,OAAOL,QAAQ;AACjB,CAAC;AAACC,EAAA,CAXIF,cAAc;EAAA,QACLH,WAAW,EACPC,WAAW,EACXC,WAAW;AAAA;AAAAS,EAAA,GAHxBR,cAAc;AAapB,eAAeA,cAAc;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
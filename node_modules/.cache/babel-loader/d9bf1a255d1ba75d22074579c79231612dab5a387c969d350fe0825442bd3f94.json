{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst getCartFromLocalStorage = userId => {\n  const savedCart = localStorage.getItem(`Cart_${userId}`);\n  return savedCart ? JSON.parse(savedCart) : [];\n};\nconst saveCartToLocalStorage = (cart, userId) => {\n  localStorage.setItem(`Cart_${userId}`, JSON.stringify(cart));\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    cart: [],\n    userId: null,\n    isAuthenticated: false\n  },\n  reducers: {\n    setUser: (state, action) => {\n      const user = action.payload;\n      state.userId = user.id;\n      state.isAuthenticated = true;\n      state.cart = getCartFromLocalStorage(user.id);\n    },\n    addToCart: (state, action) => {\n      const {\n        id,\n        Name,\n        Description,\n        Price,\n        Quantity,\n        Image\n      } = action.payload;\n      const existingItem = state.cart.find(item => item.id === id);\n      if (existingItem) {\n        existingItem.Quantity += Quantity;\n      } else {\n        state.cart.push({\n          id,\n          Name,\n          Description,\n          Price,\n          Quantity: Quantity || 1,\n          Image\n        });\n      }\n      saveCartToLocalStorage(state.cart, state.userId);\n    },\n    removeFromCart: (state, action) => {\n      const updatedCart = state.cart.filter(item => item.id !== action.payload);\n      state.cart = updatedCart;\n      saveCartToLocalStorage(updatedCart, state.userId);\n    },\n    clearCart: state => {\n      state.cart = [];\n      saveCartToLocalStorage([], state.userId);\n    },\n    logout: state => {\n      state.userId = null;\n      state.isAuthenticated = false;\n      state.cart = [];\n    }\n  }\n});\nexport const {\n  setUser,\n  addToCart,\n  removeFromCart,\n  clearCart,\n  logout\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","getCartFromLocalStorage","userId","savedCart","localStorage","getItem","JSON","parse","saveCartToLocalStorage","cart","setItem","stringify","cartSlice","name","initialState","isAuthenticated","reducers","setUser","state","action","user","payload","id","addToCart","Name","Description","Price","Quantity","Image","existingItem","find","item","push","removeFromCart","updatedCart","filter","clearCart","logout","actions","reducer"],"sources":["C:/Users/Administrator/Desktop/marrket/src/Redux/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst getCartFromLocalStorage = (userId) => {\r\n  const savedCart = localStorage.getItem(`Cart_${userId}`);\r\n  return savedCart ? JSON.parse(savedCart) : [];\r\n};\r\n\r\nconst saveCartToLocalStorage = (cart, userId) => {\r\n  localStorage.setItem(`Cart_${userId}`, JSON.stringify(cart));\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: {\r\n    cart: [],\r\n    userId: null,\r\n    isAuthenticated: false,\r\n  },\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      const user = action.payload;\r\n      state.userId = user.id;\r\n      state.isAuthenticated = true;\r\n      state.cart = getCartFromLocalStorage(user.id);\r\n    },\r\n    addToCart: (state, action) => {\r\n      const { id, Name, Description, Price, Quantity, Image } = action.payload;\r\n      const existingItem = state.cart.find(item => item.id === id);\r\n      if (existingItem) {\r\n        existingItem.Quantity += Quantity;\r\n      } else {\r\n        state.cart.push({\r\n          id,\r\n          Name,\r\n          Description,\r\n          Price,\r\n          Quantity: Quantity || 1, \r\n          Image,\r\n        });\r\n        \r\n      }\r\n      saveCartToLocalStorage(state.cart, state.userId);\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      const updatedCart = state.cart.filter(item => item.id !== action.payload);\r\n      state.cart = updatedCart;\r\n      saveCartToLocalStorage(updatedCart, state.userId);\r\n    },\r\n    clearCart: (state) => {\r\n      state.cart = [];\r\n      saveCartToLocalStorage([], state.userId);\r\n    },\r\n    logout: (state) => {\r\n      state.userId = null;\r\n      state.isAuthenticated = false;\r\n      state.cart = [];\r\n    }\r\n  },\r\n});\r\n\r\nexport const { setUser, addToCart, removeFromCart, clearCart, logout } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,uBAAuB,GAAIC,MAAM,IAAK;EAC1C,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQH,MAAM,EAAE,CAAC;EACxD,OAAOC,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,EAAE;AAC/C,CAAC;AAED,MAAMK,sBAAsB,GAAGA,CAACC,IAAI,EAAEP,MAAM,KAAK;EAC/CE,YAAY,CAACM,OAAO,CAAC,QAAQR,MAAM,EAAE,EAAEI,IAAI,CAACK,SAAS,CAACF,IAAI,CAAC,CAAC;AAC9D,CAAC;AAED,MAAMG,SAAS,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZL,IAAI,EAAE,EAAE;IACRP,MAAM,EAAE,IAAI;IACZa,eAAe,EAAE;EACnB,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3BH,KAAK,CAAChB,MAAM,GAAGkB,IAAI,CAACE,EAAE;MACtBJ,KAAK,CAACH,eAAe,GAAG,IAAI;MAC5BG,KAAK,CAACT,IAAI,GAAGR,uBAAuB,CAACmB,IAAI,CAACE,EAAE,CAAC;IAC/C,CAAC;IACDC,SAAS,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAM;QAAEG,EAAE;QAAEE,IAAI;QAAEC,WAAW;QAAEC,KAAK;QAAEC,QAAQ;QAAEC;MAAM,CAAC,GAAGT,MAAM,CAACE,OAAO;MACxE,MAAMQ,YAAY,GAAGX,KAAK,CAACT,IAAI,CAACqB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACT,EAAE,KAAKA,EAAE,CAAC;MAC5D,IAAIO,YAAY,EAAE;QAChBA,YAAY,CAACF,QAAQ,IAAIA,QAAQ;MACnC,CAAC,MAAM;QACLT,KAAK,CAACT,IAAI,CAACuB,IAAI,CAAC;UACdV,EAAE;UACFE,IAAI;UACJC,WAAW;UACXC,KAAK;UACLC,QAAQ,EAAEA,QAAQ,IAAI,CAAC;UACvBC;QACF,CAAC,CAAC;MAEJ;MACApB,sBAAsB,CAACU,KAAK,CAACT,IAAI,EAAES,KAAK,CAAChB,MAAM,CAAC;IAClD,CAAC;IACD+B,cAAc,EAAEA,CAACf,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAMe,WAAW,GAAGhB,KAAK,CAACT,IAAI,CAAC0B,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACT,EAAE,KAAKH,MAAM,CAACE,OAAO,CAAC;MACzEH,KAAK,CAACT,IAAI,GAAGyB,WAAW;MACxB1B,sBAAsB,CAAC0B,WAAW,EAAEhB,KAAK,CAAChB,MAAM,CAAC;IACnD,CAAC;IACDkC,SAAS,EAAGlB,KAAK,IAAK;MACpBA,KAAK,CAACT,IAAI,GAAG,EAAE;MACfD,sBAAsB,CAAC,EAAE,EAAEU,KAAK,CAAChB,MAAM,CAAC;IAC1C,CAAC;IACDmC,MAAM,EAAGnB,KAAK,IAAK;MACjBA,KAAK,CAAChB,MAAM,GAAG,IAAI;MACnBgB,KAAK,CAACH,eAAe,GAAG,KAAK;MAC7BG,KAAK,CAACT,IAAI,GAAG,EAAE;IACjB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEQ,OAAO;EAAEM,SAAS;EAAEU,cAAc;EAAEG,SAAS;EAAEC;AAAO,CAAC,GAAGzB,SAAS,CAAC0B,OAAO;AAC1F,eAAe1B,SAAS,CAAC2B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: [],\n  reducers: {\n    addToCart: (state, action) => {\n      const existingItem = state.find(item => item.id === action.payload.id);\n      if (existingItem) {\n        existingItem.quantity += action.payload.quantity;\n      } else {\n        state.push({\n          ...action.payload,\n          quantity: action.payload.quantity\n        });\n      }\n    }\n  }\n});\nexport const {\n  addToCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","reducers","addToCart","state","action","existingItem","find","item","id","payload","quantity","push","actions","reducer"],"sources":["C:/Users/Administrator/Desktop/marrket/src/Redux/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: [],\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      const existingItem = state.find(item => item.id === action.payload.id);\r\n      if (existingItem) {\r\n        existingItem.quantity += action.payload.quantity;\r\n      } else {\r\n        state.push({ ...action.payload, quantity: action.payload.quantity });\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart } = cartSlice.actions;\r\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMC,YAAY,GAAGF,KAAK,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACtE,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACK,QAAQ,IAAIN,MAAM,CAACK,OAAO,CAACC,QAAQ;MAClD,CAAC,MAAM;QACLP,KAAK,CAACQ,IAAI,CAAC;UAAE,GAAGP,MAAM,CAACK,OAAO;UAAEC,QAAQ,EAAEN,MAAM,CAACK,OAAO,CAACC;QAAS,CAAC,CAAC;MACtE;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER;AAAU,CAAC,GAAGJ,SAAS,CAACc,OAAO;AAC9C,eAAed,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
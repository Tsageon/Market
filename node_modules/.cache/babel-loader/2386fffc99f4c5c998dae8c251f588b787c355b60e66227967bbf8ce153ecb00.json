{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\n// Function to get the cart from localStorage\nconst getCartFromLocalStorage = () => {\n  const savedCart = localStorage.getItem('cart');\n  return savedCart ? JSON.parse(savedCart) : [];\n};\n\n// Function to save the cart to localStorage\nconst saveCartToLocalStorage = cart => {\n  localStorage.setItem('cart', JSON.stringify(cart));\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: getCartFromLocalStorage(),\n  reducers: {\n    addToCart: (state, action) => {\n      const {\n        id,\n        Name,\n        Description,\n        Price,\n        Quantity\n      } = action.payload;\n      if (id && Name && Price && Quantity) {\n        const existingItem = state.find(item => item.id === id);\n        if (existingItem) {\n          existingItem.Quantity += Quantity;\n        } else {\n          state.push({\n            id,\n            Name,\n            Description,\n            Price,\n            Quantity\n          });\n        }\n        saveCartToLocalStorage(state);\n      } else {\n        console.log('Invalid item data in payload:', action.payload);\n      }\n    },\n    removeFromCart: (state, action) => {\n      const updatedCart = state.filter(item => item.id !== action.payload);\n      saveCartToLocalStorage(updatedCart);\n      return updatedCart;\n    },\n    clearCart: () => {\n      saveCartToLocalStorage([]);\n      return [];\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  clearCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","getCartFromLocalStorage","savedCart","localStorage","getItem","JSON","parse","saveCartToLocalStorage","cart","setItem","stringify","cartSlice","name","initialState","reducers","addToCart","state","action","id","Name","Description","Price","Quantity","payload","existingItem","find","item","push","console","log","removeFromCart","updatedCart","filter","clearCart","actions","reducer"],"sources":["C:/Users/Administrator/Desktop/marrket/src/Redux/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// Function to get the cart from localStorage\r\nconst getCartFromLocalStorage = () => {\r\n  const savedCart = localStorage.getItem('cart');\r\n  return savedCart ? JSON.parse(savedCart) : [];\r\n};\r\n\r\n// Function to save the cart to localStorage\r\nconst saveCartToLocalStorage = (cart) => {\r\n  localStorage.setItem('cart', JSON.stringify(cart));\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: getCartFromLocalStorage(), \r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      const { id, Name, Description, Price, Quantity } = action.payload;\r\n      if (id && Name && Price && Quantity) {\r\n        const existingItem = state.find(item => item.id === id);\r\n        if (existingItem) {\r\n          existingItem.Quantity += Quantity;\r\n        } else {\r\n          state.push({ id, Name, Description, Price, Quantity });\r\n        }\r\n \r\n        saveCartToLocalStorage(state);\r\n      } else {\r\n        console.log('Invalid item data in payload:', action.payload);\r\n      }\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      const updatedCart = state.filter(item => item.id !== action.payload);\r\n\r\n      saveCartToLocalStorage(updatedCart);\r\n      return updatedCart;\r\n    },\r\n   \r\n    clearCart: () => {\r\n      saveCartToLocalStorage([]);\r\n      return [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart, removeFromCart, clearCart } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EACpC,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC9C,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,EAAE;AAC/C,CAAC;;AAED;AACA,MAAMK,sBAAsB,GAAIC,IAAI,IAAK;EACvCL,YAAY,CAACM,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACF,IAAI,CAAC,CAAC;AACpD,CAAC;AAED,MAAMG,SAAS,GAAGX,WAAW,CAAC;EAC5BY,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEZ,uBAAuB,CAAC,CAAC;EACvCa,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAM;QAAEC,EAAE;QAAEC,IAAI;QAAEC,WAAW;QAAEC,KAAK;QAAEC;MAAS,CAAC,GAAGL,MAAM,CAACM,OAAO;MACjE,IAAIL,EAAE,IAAIC,IAAI,IAAIE,KAAK,IAAIC,QAAQ,EAAE;QACnC,MAAME,YAAY,GAAGR,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKA,EAAE,CAAC;QACvD,IAAIM,YAAY,EAAE;UAChBA,YAAY,CAACF,QAAQ,IAAIA,QAAQ;QACnC,CAAC,MAAM;UACLN,KAAK,CAACW,IAAI,CAAC;YAAET,EAAE;YAAEC,IAAI;YAAEC,WAAW;YAAEC,KAAK;YAAEC;UAAS,CAAC,CAAC;QACxD;QAEAf,sBAAsB,CAACS,KAAK,CAAC;MAC/B,CAAC,MAAM;QACLY,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEZ,MAAM,CAACM,OAAO,CAAC;MAC9D;IACF,CAAC;IACDO,cAAc,EAAEA,CAACd,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAMc,WAAW,GAAGf,KAAK,CAACgB,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKD,MAAM,CAACM,OAAO,CAAC;MAEpEhB,sBAAsB,CAACwB,WAAW,CAAC;MACnC,OAAOA,WAAW;IACpB,CAAC;IAEDE,SAAS,EAAEA,CAAA,KAAM;MACf1B,sBAAsB,CAAC,EAAE,CAAC;MAC1B,OAAO,EAAE;IACX;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEQ,SAAS;EAAEe,cAAc;EAAEG;AAAU,CAAC,GAAGtB,SAAS,CAACuB,OAAO;AACzE,eAAevB,SAAS,CAACwB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}